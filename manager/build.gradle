apply plugin: 'com.android.application'

android {
    compileSdkVersion rootProject.ext.targetSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
    defaultConfig {
        applicationId "moe.shizuku.privileged.api"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        resValue "string", "versionName", "${rootProject.ext.versionName} (${rootProject.ext.versionCode})"
    }
    signingConfigs {
        sign
    }
    buildTypes {
        debug {
            signingConfig signingConfigs.sign
        }
        release {
            signingConfig signingConfigs.sign
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    externalNativeBuild {
        cmake {
            path 'src/main/jni/CMakeLists.txt'
        }
    }
    sourceSets {
        main {
            // don't need anymore since gradle will auto put binary output into apk
            // executable files output directory defined in src/main/jni/CMakeList.txt
            //jniLibs.srcDirs 'build/starter'
        }
    }
    lintOptions {
        disable 'AppCompatCustomView'
    }
}

task generate(type: GradleBuild) {
    tasks = [
            ':server-base:build',
            ':generator:generate',
            ':server-21:dex',
            ':server-22:dex',
            ':server-23:dex',
            ':server-24:dex',
            ':server-25:dex',
            ':server-26:dex',
    ]
}

// for test
task generateApi26(type: GradleBuild) {
    tasks = [
            ':server-base:build',
            ':generator:generateApi26',
            ':server-26:dex',
    ]
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    testImplementation 'junit:junit:4.12'
    implementation project(':api-base')
    implementation "com.android.support:appcompat-v7:$supportLibraryVersion"
    implementation "com.android.support:support-fragment:$supportLibraryVersion"
    implementation "com.android.support:cardview-v7:$supportLibraryVersion"
    implementation "com.android.support:recyclerview-v7:$supportLibraryVersion"
    implementation 'eu.chainfire:libsuperuser:1.0.0.201704021214'
    implementation "moe.shizuku.preference:preference:$preferenceLibraryVersion"
    implementation "moe.shizuku.preference:preference-dialog-android:$preferenceLibraryVersion"
    implementation "moe.shizuku.preference:preference-simplemenu:$preferenceLibraryVersion"
    implementation 'moe.shizuku.support:support-utils:2.0.1'
    implementation 'moe.shizuku.support:recyclerview-utils:2.0.3'
    implementation 'moe.shizuku.fontprovider:api:7'
}

def ksFile = file('signing.properties')
def props = new Properties()
if (ksFile.canRead()) {
    props.load(new FileInputStream(ksFile))

    if (props != null) {
        android.signingConfigs.sign.storeFile file(props['KEYSTORE_FILE'])
        android.signingConfigs.sign.storePassword props['KEYSTORE_PASSWORD']
        android.signingConfigs.sign.keyAlias props['KEYSTORE_ALIAS']
        android.signingConfigs.sign.keyPassword props['KEYSTORE_ALIAS_PASSWORD']
    } else {
        println 'some entries in \'keystore.properties\' not found!'
    }
} else {
    println '\'keystore.properties\' not found!'
}