name: App

on:
  workflow_dispatch:
    inputs:
      tag_name:
        description: 'Release tag (e.g., v1.0.0)'
        required: true
      release_title:
        description: 'Release title'
        required: true
      release_body:
        description: 'Content (Markdown format)'
        required: true
        type: text

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: 'recursive'
          fetch-depth: 0
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
      - name: Write key
        if: github.event_name != 'pull_request' && github.ref == 'refs/heads/master'
        run: |
          echo KEYSTORE_PASSWORD=${{ secrets.KEYSTORE_PASSWORD }} > signing.properties
          echo KEYSTORE_ALIAS=${{ secrets.KEYSTORE_ALIAS }} >> signing.properties
          echo KEYSTORE_ALIAS_PASSWORD='${{ secrets.KEYSTORE_ALIAS_PASSWORD }}' >> signing.properties
          echo KEYSTORE_FILE=../key.jks >> signing.properties
          echo ${{ secrets.KEYSTORE }} | base64 --decode > key.jks
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          dependency-graph: generate-and-submit
          build-scan-publish: true
          build-scan-terms-of-use-url: "https://gradle.com/terms-of-service"
          build-scan-terms-of-use-agree: "yes"
      - name: Build with Gradle
        id: buildWithGradle
        run: |
          yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --licenses > /dev/null || true
          echo 'android.sdk.channel=3' >> gradle.properties
          echo 'android.native.buildOutput=verbose' >> gradle.properties
          echo 'org.gradle.caching=true' >> gradle.properties
          echo 'org.gradle.parallel=true' >> gradle.properties
          ./gradlew :manager:assemble
          releaseName=`ls manager/build/outputs/apk/release/shizuku*-v*-release.apk | awk -F '(/|-release.apk)' '{print $6}'` && echo "releaseName=$releaseName" >> $GITHUB_OUTPUT
      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.event.inputs.tag_name }}
          name: ${{ github.event.inputs.release_title }}
          body: ${{ github.event.inputs.release_body }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.event.inputs.tag_name }}
          files: manager/build/outputs/apk/release/shizuku*-v*-release.apk